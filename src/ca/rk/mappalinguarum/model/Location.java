package ca.rk.mappalinguarum.model;

import ca.rk.mappalinguarum.util.Colour;
import ca.rk.mappalinguarum.util.RandomColourGenerator;

/**
 * Encapsulates a location on the map
 * 
 * @author RK
 */
public class Location {

	private double[] longitudes;
	private double[] latitudes;
	private Language language;
	private Colour colour;
	
	/**
	 * constructs an empty Location, assigning it a colour 
	 */
	public Location() {
		longitudes = null;
		latitudes = null;
		language = null;
		colour = RandomColourGenerator.getInstance().generateColour();
	}

	/**
	 * generated by Eclipse
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((language == null) ? 0 : language.hashCode());
		return result;
	}

	/**
	 * generated by Eclipse
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Location)) {
			return false;
		}
		Location other = (Location) obj;
		if (language == null) {
			if (other.language != null) {
				return false;
			}
		} else if (!language.equals(other.language)) {
			return false;
		}
		return true;
	}

	//accessors
	public double[] getLongitudes() { return longitudes; }
	public double[] getLatitudes() { return latitudes; }
	public Language getLanguage() { return language; }
	public Colour getColour() { return colour; }
	
	public void setLongitudes(double[] numbars) { longitudes = numbars; }
	public void setLatitudes(double[] numbars) { latitudes = numbars; }
	public void setLanguage(Language language) { this.language = language; }
}
